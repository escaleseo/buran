version: 2.1
jobs:
  build-and-test:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: make test-unit
      - run: "make build"
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths: ["/go/pkg/mod"]
      - persist_to_workspace:
          root: .
          paths: [dist, coverage]

  deploy:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run: docker login -u ${DOCKER_LOGIN} -p ${DOCKER_PASSWORD}
      - run: ./docker_deploy.sh escaletech/buran

  test-rediscluster:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - run:
          name: Start Redis Cluster
          command: |
            sudo apt install redis-server
            ./scripts/create-cluster start
            echo "yes\n" | ./scripts/create-cluster create
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: make test-rediscluster
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths: ["/go/pkg/mod"]
      - persist_to_workspace:
          root: .
          paths: [coverage]


  test-redis:
    docker:
      - image: circleci/golang:1.13
      - image: circleci/redis
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: make test-redis
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths: ["/go/pkg/mod"]
      - persist_to_workspace:
          root: .
          paths: [coverage]

  test-memory:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: make test-memory
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths: ["/go/pkg/mod"]
      - persist_to_workspace:
          root: .
          paths: [coverage]

  upload-coverage:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install tools
          command: |
            go get github.com/mattn/goveralls
            go get github.com/wadey/gocovmerge
      - run:
          name: Merge coverages
          command: |
            gocovmerge ./coverage/unit.out ./coverage/redis.out ./coverage/redis-cluster.out ./coverage/memory.out > ./coverage/all.out
            sed -i "s/$(pwd | sed 's/\//\\\//g')/github.com\/escaletech\/buran/g" ./coverage/all.out
      - run:
          name: Upload coverage
          command: goveralls -coverprofile=./coverage/all.out -service=circle-ci -repotoken $COVERALLS_TOKEN

workflows:
  version: 2
  ci:
    jobs:
      - build-and-test:
          filters: &ci-filters { tags: { ignore: /.*/ } }
      - test-memory:
          filters: *ci-filters
          requires: [build-and-test]
      - test-redis:
          filters: *ci-filters
          requires: [build-and-test]
      - test-rediscluster:
          filters: *ci-filters
          requires: [build-and-test]
      - upload-coverage:
          filters: *ci-filters
          requires: [test-memory, test-redis, test-rediscluster]
  release:
    jobs:
      - build-and-test:
          filters: &release-filters { branches: { ignore: /.*/ }, tags: { only: /^v.*/ } }
      - test-memory:
          filters: *release-filters
          requires: [build-and-test]
      - test-redis:
          filters: *release-filters
          requires: [build-and-test]
      - test-rediscluster:
          filters: *release-filters
          requires: [build-and-test]
      - deploy:
          filters: *release-filters
          requires: [test-memory, test-redis, test-rediscluster]
